[1mdiff --git a/tournament-bracket-tool/Backend/rounds/bracket.csv b/tournament-bracket-tool/Backend/rounds/bracket.csv[m
[1mindex 297c1cf..f7225dd 100644[m
[1m--- a/tournament-bracket-tool/Backend/rounds/bracket.csv[m
[1m+++ b/tournament-bracket-tool/Backend/rounds/bracket.csv[m
[36m@@ -1,16 +1,10 @@[m
[31m-Type,Bracket,Round,Group,Match,Team 1,Team 2,Next Match,Outcome[m
[31m-round_robin,main,1,1,1,"as, dasd, as, asd","asd, as, d, dasdas",1,[m
[31m-round_robin,main,1,1,2,"as, dasd, as, asd","das, ds",1,[m
[31m-round_robin,main,1,1,3,"as, dasd, as, asd","asd, das, d, dasdas",1,[m
[31m-round_robin,main,1,1,4,"as, dasd, as, asd","as, d, asdas, dasdas",1,[m
[31m-round_robin,main,1,1,5,"asd, as, d, dasdas","das, ds",1,[m
[31m-round_robin,main,1,1,6,"asd, as, d, dasdas","asd, das, d, dasdas",1,[m
[31m-round_robin,main,1,1,7,"asd, as, d, dasdas","as, d, asdas, dasdas",1,[m
[31m-round_robin,main,1,1,8,"das, ds","asd, das, d, dasdas",1,[m
[31m-round_robin,main,1,1,9,"das, ds","as, d, asdas, dasdas",1,[m
[31m-round_robin,main,1,1,10,"asd, das, d, dasdas","as, d, asdas, dasdas",1,[m
[31m-round_robin,main,2,,1,,,1,[m
[31m-round_robin,main,3,,1,,,1,[m
[31m-round_robin,loser,2,,1,,,,[m
[31m-round_robin,loser,2,,2,,,,[m
[31m-round_robin,loser,2,,3,,,,[m
[32m+[m[32mType,Round,Group,Match,Team 1,Team 2,Next Match,Outcome[m
[32m+[m[32mgroup_play,1,1,1,"lmafo, apa","tobbelito, rowan",1,[m
[32m+[m[32mgroup_play,1,1,2,"lmafo, apa","dasdas, noob",1,[m
[32m+[m[32mgroup_play,1,1,3,"lmafo, apa","kaka, dasd",1,[m
[32m+[m[32mgroup_play,1,1,4,"tobbelito, rowan","dasdas, noob",1,[m
[32m+[m[32mgroup_play,1,1,5,"tobbelito, rowan","kaka, dasd",1,[m
[32m+[m[32mgroup_play,1,1,6,"dasdas, noob","kaka, dasd",1,[m
[32m+[m[32mgroup_play,3,,1,,,1,[m
[32m+[m[32mgroup_play,3,,2,,,1,[m
[32m+[m[32mgroup_play,4,,1,,,,[m
[1mdiff --git a/tournament-bracket-tool/Backend/rounds/settings.txt b/tournament-bracket-tool/Backend/rounds/settings.txt[m
[1mindex 3489f94..71d852b 100644[m
[1m--- a/tournament-bracket-tool/Backend/rounds/settings.txt[m
[1m+++ b/tournament-bracket-tool/Backend/rounds/settings.txt[m
[36m@@ -1,4 +1,4 @@[m
[31m-bracket_type=round_robin[m
[31m-team_size=4[m
[32m+[m[32mbracket_type=double_elimination[m
[32m+[m[32mteam_size=2[m
 group_size=4[m
[31m-names=asdas,dasdas,dasdas,dasdas,dasd,asd,asd,as,ds,d,as,das,d,asd,as,das,d,as[m
[32m+[m[32mnames=dasd,dasdas,dasdas,kaka,apa,noob,tobbelito,rowan,lmafo,kasdkaskdsa[m
[1mdiff --git a/tournament-bracket-tool/Backend/scripts/Bracket_Generation.py b/tournament-bracket-tool/Backend/scripts/Bracket_Generation.py[m
[1mindex c4da4e9..6caad57 100644[m
[1m--- a/tournament-bracket-tool/Backend/scripts/Bracket_Generation.py[m
[1m+++ b/tournament-bracket-tool/Backend/scripts/Bracket_Generation.py[m
[36m@@ -20,8 +20,6 @@[m [mdef main():[m
     names = [n.strip() for n in settings.get("names", "").split(",") if n.strip()][m
     bracket_type = settings.get("bracket_type", "single_elimination")[m
     team_size = int(settings.get("team_size", "1"))[m
[31m-    losers_bracket = settings.get("losers_bracket", "False")[m
[31m-    n_winners = int(settings.get("n_winners", "2"))[m
     print(bracket_type)[m
     if not names:[m
         print("No names found in settings.txt.")[m
[36m@@ -34,7 +32,7 @@[m [mdef main():[m
     elif bracket_type == "double_elimination":[m
         bracket = DoubleElimination(names, team_size=team_size)[m
     elif bracket_type == "round_robin":[m
[31m-        bracket = RoundRobin(names, team_size=team_size, seed="random", n_winners=n_winners, losers_bracket=losers_bracket)[m
[32m+[m[32m        bracket = RoundRobin(names, team_size=team_size)[m
     elif bracket_type == "group_play":[m
         group_size = int(settings.get("group_size", "8"))[m
         seed = settings.get("seed", "random")[m
[1mdiff --git a/tournament-bracket-tool/Frontend/static/templates/new_settings.html b/tournament-bracket-tool/Frontend/static/templates/new_settings.html[m
[1mindex 70b3f0b..56b55f6 100644[m
[1m--- a/tournament-bracket-tool/Frontend/static/templates/new_settings.html[m
[1m+++ b/tournament-bracket-tool/Frontend/static/templates/new_settings.html[m
[36m@@ -40,8 +40,6 @@[m
                 <input type="number" id="teamSize" name="teamSize" min="1" value="1"><br><br>[m
                 <label for="groupSize">Group Size:</label>[m
                 <input type="number" id="groupSize" name="groupSize" min="1" value="4"><br><br>[m
[31m-                <checkbox id="LosersBracket" name="LosersBracket">[m
[31m-                <label for="LosersBracket">Include Losers Bracket</label><br><br>[m
                 <label for="players">Players:</label>[m
                 [m
                 <input type="text" id="playerInput" placeholder="Enter player name">[m
[1mdiff --git a/tournament-bracket-tool/Frontend/static/visualization/gameplays/round_robin.js b/tournament-bracket-tool/Frontend/static/visualization/gameplays/round_robin.js[m
[1mindex 5bf5957..fdc4f59 100644[m
[1m--- a/tournament-bracket-tool/Frontend/static/visualization/gameplays/round_robin.js[m
[1m+++ b/tournament-bracket-tool/Frontend/static/visualization/gameplays/round_robin.js[m
[36m@@ -1,228 +1,3 @@[m
[31m-import { drawBracketConnections } from '../drawBracketConnections.js';[m
[31m-import { highlightTeam, setTeamNameNextRound, editTeamName } from '../interactions/index.js';[m
[31m-[m
 export function renderRoundRobin(data, bracketDiv) {[m
[31m-    bracketDiv.innerHTML = '';[m
[31m-    if (!data.rounds || data.rounds.length === 0) {[m
[31m-        bracketDiv.innerText = 'No bracket data available.';[m
[31m-        return;[m
[31m-    }[m
[31m-    const matchDivs = [];[m
[31m-    // Configurable spacing[m
[31m-    const xGap = 350; // horizontal gap between rounds[m
[31m-    const yGap = 200;  // minimum vertical gap between matches[m
[31m-    const groupYGap = 50; // extra vertical gap between groups[m
[31m-    const baseY = 40; // top margin[m
[31m-    const groupColors = ['#4f8cff', '#ff6f61', '#ffa500', '#32cd32', '#ff69b4', '#8a2be2']; // Colors for different groups[m
[31m-    let maxWidth = 0;[m
[31m-    let maxHeight = 0;[m
[31m-    [m
[31m-    data.rounds.forEach((round, rIdx) => {[m
[31m-        const roundDiv = document.createElement('div');[m
[31m-        roundDiv.className = 'round';[m
[31m-        roundDiv.style.position = 'absolute';[m
[31m-        roundDiv.style.left = `${rIdx * xGap}px`;[m
[31m-        roundDiv.style.top = '0';[m
[31m-        [m
[31m-        const roundLabel = document.createElement('div');[m
[31m-        roundLabel.className = 'round-label';[m
[31m-        roundLabel.innerText = `Round ${rIdx + 1}`;[m
[31m-        roundDiv.appendChild(roundLabel);[m
[31m-        [m
[31m-        matchDivs.push([]);[m
[31m-        const numMatches = round.length;[m
[31m-        [m
[31m-        // Pyramid layout: calculate vertical position for each match[m
[31m-        const totalHeight = Math.pow(2, data.rounds.length - 1) * yGap;[m
[31m-        [m
[31m-        // For round 1: group matches by Group and create bounding boxes[m
[31m-        if (rIdx === 0) {[m
[31m-            // Group matches by their Group value[m
[31m-            const groups = {};[m
[31m-            round.forEach((match, mIdx) => {[m
[31m-                const groupId = match.Group || 'ungrouped';[m
[31m-                if (!groups[groupId]) {[m
[31m-                    groups[groupId] = [];[m
[31m-                }[m
[31m-                groups[groupId].push({ match, mIdx });[m
[31m-            });[m
[31m-            [m
[31m-            let currentY = baseY;[m
[31m-            const groupIds = Object.keys(groups);[m
[31m-            [m
[31m-            // Create group containers and matches[m
[31m-            groupIds.forEach((groupId, groupIndex) => {[m
[31m-                const groupMatches = groups[groupId];[m
[31m-                [m
[31m-                // Create group bounding box for round 1[m
[31m-                const groupDiv = document.createElement('div');[m
[31m-                groupDiv.className = 'group-container';[m
[31m-                groupDiv.style.position = 'absolute';[m
[31m-                groupDiv.style.left = '0';[m
[31m-                groupDiv.style.top = `${currentY}px`;[m
[31m-                groupDiv.style.border = '2px solid ' + groupColors[groupIndex % groupColors.length];[m
[31m-                groupDiv.style.borderRadius = '8px';[m
[31m-                groupDiv.style.padding = '10px';[m
[31m-                groupDiv.style.backgroundColor = 'rgba(79, 140, 255, 0.05)';[m
[31m-                [m
[31m-                // Add group label[m
[31m-                const groupLabel = document.createElement('div');[m
[31m-                groupLabel.className = 'group-label';[m
[31m-                groupLabel.innerText = `Group ${groupId}`;[m
[31m-                groupLabel.style.fontWeight = 'bold';[m
[31m-                groupLabel.style.marginBottom = '10px';[m
[31m-                groupLabel.style.color = groupColors[groupIndex % groupColors.length];[m
[31m-                groupDiv.appendChild(groupLabel);[m
[31m-                [m
[31m-                // Create matches within this group[m
[31m-                groupMatches.forEach(({ match, mIdx }, matchIndexInGroup) => {[m
[31m-                    const matchDiv = createMatchElement(match, rIdx, mIdx, matchIndexInGroup, groupMatches.length, currentY);[m
[31m-                    [m
[31m-                    // Add interaction handlers[m
[31m-                    addMatchInteractions(matchDiv, data, rIdx, mIdx, matchDivs, saveBracketData);[m
[31m-                    [m
[31m-                    groupDiv.appendChild(matchDiv);[m
[31m-                    matchDivs[rIdx].push(matchDiv);[m
[31m-                });[m
[31m-                [m
[31m-                roundDiv.appendChild(groupDiv);[m
[31m-                currentY += (groupMatches.length * yGap) + groupYGap;[m
[31m-            });[m
[31m-            [m
[31m-            maxHeight = Math.max(maxHeight, currentY);[m
[31m-        } else {[m
[31m-            // For subsequent rounds: single elimination style (no groups)[m
[31m-            for (let mIdx = 0; mIdx < numMatches; mIdx++) {[m
[31m-                const match = round[mIdx];[m
[31m-                const matchDiv = document.createElement('div');[m
[31m-                const matchLabel = document.createElement('div');[m
[31m-                matchLabel.className = 'match-label';[m
[31m-                [m
[31m-                // Correct logic for labeling rounds[m
[31m-                if (rIdx === data.rounds.length - 1) {[m
[31m-                    matchLabel.innerText = `Final`;[m
[31m-                } else if (rIdx === data.rounds.length - 2) {[m
[31m-                    matchLabel.innerText = `Semi-Final ${mIdx + 1}`;[m
[31m-                } else {[m
[31m-                    matchLabel.innerText = `Match ${mIdx + 1}`;[m
[31m-                }[m
[31m-                matchDiv.appendChild(matchLabel);[m
[31m-                [m
[31m-                matchDiv.className = 'match';[m
[31m-                matchDiv.style.position = 'absolute';[m
[31m-                const matchHeight = totalHeight / numMatches;[m
[31m-                const y = baseY + mIdx * matchHeight + (matchHeight - yGap) / 2;[m
[31m-                matchDiv.style.top = `${y}px`;[m
[31m-                matchDiv.style.left = '0';[m
[31m-                matchDiv.style.width = '200px';[m
[31m-                matchDiv.style.border = '1px solid #ccc';[m
[31m-                [m
[31m-                const team1Box = document.createElement('div');[m
[31m-                team1Box.className = 'team-box';[m
[31m-                team1Box.innerText = match.team1;[m
[31m-                matchDiv.appendChild(team1Box);[m
[31m-                [m
[31m-                const vsSpan = document.createElement('div');[m
[31m-                vsSpan.className = 'vs-span';[m
[31m-                vsSpan.innerText = 'vs';[m
[31m-                matchDiv.appendChild(vsSpan);[m
[31m-                [m
[31m-                const team2Box = document.createElement('div');[m
[31m-                team2Box.className = 'team-box';[m
[31m-                team2Box.innerText = match.team2;[m
[31m-                matchDiv.appendChild(team2Box);[m
[31m-[m
[31m-                // Add interaction handlers[m
[31m-                addMatchInteractions(matchDiv, data, rIdx, mIdx, matchDivs, saveBracketData);[m
[31m-                [m
[31m-                roundDiv.appendChild(matchDiv);[m
[31m-                matchDivs[rIdx].push(matchDiv);[m
[31m-                [m
[31m-                // Track max height[m
[31m-                if (y + yGap > maxHeight) maxHeight = y + yGap;[m
[31m-            }[m
[31m-        }[m
[31m-        [m
[31m-        bracketDiv.appendChild(roundDiv);[m
[31m-        // Track max width[m
[31m-        if ((rIdx + 1) * xGap > maxWidth) maxWidth = (rIdx + 1) * xGap;[m
[31m-    });[m
[31m-    [m
[31m-    // Set bounding box size to cover the entire bracket[m
[31m-    bracketDiv.style.position = 'relative';[m
[31m-    bracketDiv.style.width = `${maxWidth}px`;[m
[31m-    bracketDiv.style.height = `${maxHeight}px`;[m
[31m-    drawBracketConnections(bracketDiv, matchDivs, data);[m
[31m-[m
[31m-    // Helper function to create match elements[m
[31m-    function createMatchElement(match, rIdx, mIdx, matchIndexInGroup, totalMatchesInGroup, groupTop) {[m
[31m-        const matchDiv = document.createElement('div');[m
[31m-        const matchLabel = document.createElement('div');[m
[31m-        matchLabel.className = 'match-label';[m
[31m-        matchLabel.innerText = `Match ${mIdx + 1}`;[m
[31m-        matchDiv.appendChild(matchLabel);[m
[31m-        [m
[31m-        matchDiv.className = 'match';[m
[31m-        matchDiv.style.position = 'relative';[m
[31m-        matchDiv.style.marginBottom = '10px';[m
[31m-        matchDiv.style.width = '200px';[m
[31m-        matchDiv.style.border = '1px solid #ccc';[m
[31m-        matchDiv.style.backgroundColor = 'white';[m
[31m-        [m
[31m-        const team1Box = document.createElement('div');[m
[31m-        team1Box.className = 'team-box';[m
[31m-        team1Box.innerText = match.team1;[m
[31m-        matchDiv.appendChild(team1Box);[m
[31m-        [m
[31m-        const vsSpan = document.createElement('div');[m
[31m-        vsSpan.className = 'vs-span';[m
[31m-        vsSpan.innerText = 'vs';[m
[31m-        matchDiv.appendChild(vsSpan);[m
[31m-        [m
[31m-        const team2Box = document.createElement('div');[m
[31m-        team2Box.className = 'team-box';[m
[31m-        team2Box.innerText = match.team2;[m
[31m-        matchDiv.appendChild(team2Box);[m
[31m-        [m
[31m-        return matchDiv;[m
[31m-    }[m
[31m-    [m
[31m-    // Helper function to add interactions to matches[m
[31m-    function addMatchInteractions(matchDiv, data, rIdx, mIdx, matchDivs, saveBracketData) {[m
[31m-        const team1Box = matchDiv.querySelector('.team-box:nth-child(2)'); // Skip match label[m
[31m-        const team2Box = matchDiv.querySelector('.team-box:nth-child(4)'); // Skip vs span[m
[31m-        [m
[31m-        [team1Box, team2Box].forEach((teamDiv, teamIdx) => {[m
[31m-            // Single left click: highlight[m
[31m-            teamDiv.addEventListener('click', (e) => {[m
[31m-                if (e.detail === 1 && e.button === 0) {[m
[31m-                    highlightTeam(teamDiv);[m
[31m-                }[m
[31m-            });[m
[31m-            // Double left click: set team name in next round[m
[31m-            teamDiv.addEventListener('dblclick', (e) => {[m
[31m-                if (e.button === 0) {[m
[31m-                    setTeamNameNextRound(data, rIdx, mIdx, teamIdx, matchDivs);[m
[31m-                }[m
[31m-            });[m
[31m-            // Right click: edit team name and save to backend[m
[31m-            teamDiv.addEventListener('contextmenu', (e) => {[m
[31m-                e.preventDefault();[m
[31m-                editTeamName(teamDiv, data, rIdx, mIdx, teamIdx, matchDivs, saveBracketData);[m
[31m-            });[m
[31m-        });[m
[31m-    }[m
[31m-[m
[31m-    // Save function: POST updated bracket to backend[m
[31m-    function saveBracketData(updatedData) {[m
[31m-        fetch('/api/save_bracket', {[m
[31m-            method: 'POST',[m
[31m-            headers: { 'Content-Type': 'application/json' },[m
[31m-            body: JSON.stringify(updatedData)[m
[31m-        }).then(res => {[m
[31m-            if (!res.ok) {[m
[31m-                alert('Failed to save bracket data');[m
[31m-            }[m
[31m-        });[m
[31m-    }[m
[32m+[m[32m    // TODO: Implement round robin rendering logic[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/tournament-bracket-tool/Frontend/static/visualization/main.js b/tournament-bracket-tool/Frontend/static/visualization/main.js[m
[1mindex 20c13fb..88b78a9 100644[m
[1m--- a/tournament-bracket-tool/Frontend/static/visualization/main.js[m
[1m+++ b/tournament-bracket-tool/Frontend/static/visualization/main.js[m
[36m@@ -24,7 +24,9 @@[m [mfetchBracket().then(data => {[m
 	} else if (data.type === 'group_play') {[m
 		import('./gameplays/group_play.js').then(mod => {[m
 			mod.renderGroupPlay(data, bracketDiv);[m
[31m-			[m
[32m+[m			[32mconsole.log('Full data:', data);[m
[32m+[m			[32mconsole.log('Data type:', typeof data);[m
[32m+[m			[32mconsole.log('Data keys:', Object.keys(data));[m
 		});[m
 	} else if (data.type === 'round_robin') {[m
 		import('./gameplays/round_robin.js').then(mod => {[m
[1mdiff --git a/tournament-bracket-tool/src/brackets/__pycache__/round_robin.cpython-311.pyc b/tournament-bracket-tool/src/brackets/__pycache__/round_robin.cpython-311.pyc[m
[1mindex b3526ff..1880140 100644[m
Binary files a/tournament-bracket-tool/src/brackets/__pycache__/round_robin.cpython-311.pyc and b/tournament-bracket-tool/src/brackets/__pycache__/round_robin.cpython-311.pyc differ
[1mdiff --git a/tournament-bracket-tool/src/brackets/round_robin.py b/tournament-bracket-tool/src/brackets/round_robin.py[m
[1mindex 4330cc6..f212b36 100644[m
[1m--- a/tournament-bracket-tool/src/brackets/round_robin.py[m
[1m+++ b/tournament-bracket-tool/src/brackets/round_robin.py[m
[36m@@ -1,190 +1,20 @@[m
[31m-import csv[m
[31m-import math[m
[31m-import pandas as pd[m
[31m-[m
 class RoundRobin:[m
[31m-    def __init__(self, participants, seed, team_size, n_winners, losers_bracket):[m
[32m+[m[32m    def __init__(self, participants):[m
         self.participants = participants[m
[31m-        self.groups = [][m
[31m-        self.seed = seed[m
[31m-        self.team_size = team_size[m
[31m-        self.group_size = len(participants)  # All in one group[m
[31m-        self.group = True[m
[31m-        self.n_winners = n_winners[m
[31m-        self.losers_bracket = losers_bracket[m
[31m-[m
[31m-    def seed_teams(self):[m
[31m-        if self.seed == "random":[m
[31m-            from seeding.random_seed import random_seed[m
[31m-            self.groups = random_seed(self.participants, self.team_size, self.group, self.group_size)[m
[31m-        else:[m
[31m-            # Simple grouping if not random[m
[31m-            self.groups = [self.participants[i:i+self.group_size] for i in range(0, len(self.participants), self.group_size)][m
[31m-[m
[31m-    def generate_group_matchups(self):[m
[31m-        if not self.groups:[m
[31m-            self.seed_teams()[m
[31m-        group_matchups = [][m
[31m-        for g_idx, group in enumerate(self.groups, 1):[m
[31m-            matches = [][m
[31m-            for i in range(len(group)):[m
[31m-                for j in range(i+1, len(group)):[m
[31m-                    matches.append((group[i], group[j]))[m
[31m-            group_matchups.append((g_idx, matches))[m
[31m-     